
services:

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATION_REPORT=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=discord://${DISCORD_WEBHOOK_ID}@${DISCORD_CHANNEL}
    command: --interval 120
    restart: unless-stopped

  frontend:
    restart: always
    image: tscript3r/batex-fe:latest
    environment:
      - REACT_APP_ENV=${REACT_APP_ENV}
    ports:
      - "4000:80"
    depends_on:
      - backend
    networks:
      - batex-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "2"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  backend:
    restart: always
    image: tscript3r/batex-be:latest
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - OSRM_PORT=${OSRM_PORT}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "4001:8080"
    networks:
      - batex-network
    depends_on:
      - postgres
      - osrm
    deploy:
      resources:
        limits:
          memory: 1028M
          cpus: "2"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  osrm:
    restart: always
    image: osrm/osrm-backend:latest
    ports:
      - "${OSRM_PORT}:5000"
    volumes:
      - ${OSRM_DATA}:/data
    command: >
      osrm-routed --algorithm mld /data/poland-latest.osrm
    networks:
      - batex-network
    deploy:
      resources:
        limits:
          memory: 2048M
          cpus: "2"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  postgres:
    image: postgres:17.2-alpine3.21
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    networks:
      - batex-network
    volumes:
      - batexdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

volumes:
  batexdb:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DB_DIRECTORY}

networks:
  batex-network:
    driver: bridge